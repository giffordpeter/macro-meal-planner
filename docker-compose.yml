version: '3.8'

services:
  db:
    image: postgres:15.10
    environment:
      POSTGRES_USER: ${DB_USER:-macro_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-macro_password}
      POSTGRES_DB: ${DB_NAME:-macro_meal_planner}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-macro_user} -d ${DB_NAME:-macro_meal_planner}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - ./api:/app
      - ./api/alembic:/app/alembic
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-macro_user}:${DB_PASSWORD:-macro_password}@db:5432/${DB_NAME:-macro_meal_planner}
      - ENVIRONMENT=development
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - JWT_SECRET=${JWT_SECRET:-development_secret}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - api

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,secretsmanager,sns
      - DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ./localstack:/docker-entrypoint-initaws.d
      - localstack_data:/tmp/localstack

volumes:
  postgres_data:
  localstack_data:
