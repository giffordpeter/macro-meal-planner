version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            # Set Node version
            - nvm use 18
            - node -v
            # Install dependencies
            - npm ci
            # Load environment variables
            - |
              echo "Setting up environment variables..."
              touch .env
              
              # Verify branch name
              echo "Current branch: $AWS_BRANCH"
              if [ "$AWS_BRANCH" != "develop" ] && [ "$AWS_BRANCH" != "main" ]; then
                echo "Error: Unexpected branch name: $AWS_BRANCH"
                echo "Expected 'develop' or 'main'"
                exit 1
              fi
              
              # Base path for parameters
              SSM_BASE="/amplify/dnmfawxs8f2l8/$AWS_BRANCH"
              
              # Function to load SSM parameter
              load_param() {
                local path=$1
                local env_var=$2
                local is_secret=${3:-false}
                
                echo "Loading $env_var from $path"
                local value
                if [ "$is_secret" = true ]; then
                  value=$(aws ssm get-parameter --name "$path" --with-decryption --query "Parameter.Value" --output text)
                else
                  value=$(aws ssm get-parameter --name "$path" --query "Parameter.Value" --output text)
                fi
                
                if [ $? -eq 0 ]; then
                  echo "$env_var=$value" >> .env
                  echo " Loaded $env_var"
                else
                  echo " Failed to load $env_var"
                  return 1
                fi
              }
              
              # Load application configuration
              load_param "$SSM_BASE/app/url" "APP_URL"
              load_param "$SSM_BASE/app/features" "APP_FEATURES"
              
              # Load database configuration
              load_param "$SSM_BASE/database/url" "DATABASE_URL" true
              load_param "$SSM_BASE/database/config" "DATABASE_CONFIG"
              
              # Load authentication configuration
              load_param "$SSM_BASE/auth/github_id" "AUTH_GITHUB_ID" true
              load_param "$SSM_BASE/auth/github_secret" "AUTH_GITHUB_SECRET" true
              load_param "$SSM_BASE/auth/nextauth_secret" "NEXTAUTH_SECRET" true
              
              # Set NEXTAUTH_URL from APP_URL
              echo "NEXTAUTH_URL=$APP_URL" >> .env
              
              # Load service configuration
              load_param "$SSM_BASE/services/openai_key" "OPENAI_API_KEY" true
              
              # Set environment-specific variables
              echo "NODE_ENV=production" >> .env
              
              echo "Environment setup complete"
              echo "Loaded environment variables (excluding secrets):"
              cat .env | grep -v "SECRET\|KEY\|TOKEN\|URL" || true
              
              # Verify critical environment variables
              required_vars=("APP_URL" "DATABASE_URL" "AUTH_GITHUB_ID" "AUTH_GITHUB_SECRET" "NEXTAUTH_SECRET" "NEXTAUTH_URL")
              for var in "${required_vars[@]}"; do
                if ! grep -q "^$var=" .env; then
                  echo "Error: Missing required environment variable: $var"
                  exit 1
                fi
              done
        
        # Generate Prisma client
        - npx prisma generate
      build:
        commands:
          - echo "Starting build..."
          - npm run build
      postBuild:
        commands:
          - echo "Build completed"
    artifacts:
      baseDirectory: .next
      files:
        - '**/*'
    cache:
      paths:
        - node_modules/**/*
        - .next/cache/**/*
    appRoot: .
