name: Staging CI/CD

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - develop

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  ENVIRONMENT: staging

jobs:
  test-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    environment: staging
    name: Build and Deploy
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup PostgreSQL for unit tests
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: test_user
          password: test_password
          database: test_db
          port: 5432

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: npm run test:unit

      - name: Run integration tests
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          NEXTAUTH_URL: https://develop.dole2coul5w42.amplifyapp.com
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: npm run test:integration

      - name: Build application
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          NEXTAUTH_URL: https://develop.dole2coul5w42.amplifyapp.com
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          npm run build
          # Create build artifact
          tar -czf build.tar.gz .next out node_modules package.json

      - name: Deploy to AWS Amplify
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          APP_ID: ${{ secrets.AWS_AMPLIFY_APP_ID }}
          BRANCH_NAME: develop
        run: |
          # Upload build artifact to S3
          aws s3 cp build.tar.gz s3://macro-meal-planner-artifacts/staging/builds/$GITHUB_SHA.tar.gz

          # Start Amplify job
          aws amplify start-job \
            --app-id $APP_ID \
            --branch-name $BRANCH_NAME \
            --job-type RELEASE \
            --job-reason 'GitHub Actions staging deployment' \
            --source-url s3://macro-meal-planner-artifacts/staging/builds/$GITHUB_SHA.tar.gz

  cleanup_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    environment: staging
    name: Cleanup Pull Request
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete PR preview
        env:
          APP_ID: ${{ secrets.AWS_AMPLIFY_APP_ID }}
          BRANCH_NAME: pr-${{ github.event.pull_request.number }}
        run: |
          aws amplify delete-branch \
            --app-id $APP_ID \
            --branch-name $BRANCH_NAME
