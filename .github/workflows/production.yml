name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  AMPLIFY_APP_ID: ${{ secrets.AWS_AMPLIFY_APP_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate Environment
        run: |
          chmod +x scripts/validate-env.sh
          ./scripts/validate-env.sh
        env:
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NODE_ENV: 'production'
          DATABASE_SECRET_NAME: ${{ secrets.DATABASE_SECRET_NAME }}
        
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXTAUTH_URL }}
          
      - name: Create build artifact
        run: |
          tar -czf build.tar.gz .next node_modules public package.json package-lock.json
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to AWS Amplify
        run: |
          # Upload build artifact to S3
          aws s3 cp build.tar.gz s3://macro-meal-planner-artifacts/builds/$GITHUB_SHA.tar.gz

          # Start Amplify job
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name main \
            --job-type RELEASE \
            --job-reason 'GitHub Actions deployment' \
            --source-url s3://macro-meal-planner-artifacts/builds/$GITHUB_SHA.tar.gz
            
      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30  # Initial wait for deployment to start
          
          MAX_ATTEMPTS=20
          ATTEMPT=1
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            STATUS=$(aws amplify get-job --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name main --job-id $(aws amplify list-jobs --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name main --max-results 1 --query 'jobSummaries[0].jobId' --output text) --query 'job.summary.status' --output text)
            
            if [ "$STATUS" = "SUCCEED" ]; then
              echo "Deployment successful!"
              break
            elif [ "$STATUS" = "FAILED" ]; then
              echo "Deployment failed!"
              exit 1
            fi
            
            echo "Deployment status: $STATUS (Attempt $ATTEMPT/$MAX_ATTEMPTS)"
            ATTEMPT=$((ATTEMPT + 1))
            sleep 30
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "Deployment timed out!"
            exit 1
          fi
          
      - name: Verify Health
        run: |
          echo "Verifying application health..."
          HEALTH_CHECK_URL="${{ secrets.NEXTAUTH_URL }}/api/health"
          
          MAX_ATTEMPTS=10
          ATTEMPT=1
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_CHECK_URL)
            
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "Health check passed!"
              break
            fi
            
            echo "Health check failed with status $HTTP_STATUS (Attempt $ATTEMPT/$MAX_ATTEMPTS)"
            ATTEMPT=$((ATTEMPT + 1))
            sleep 30
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "Health check timed out!"
            exit 1
          fi
